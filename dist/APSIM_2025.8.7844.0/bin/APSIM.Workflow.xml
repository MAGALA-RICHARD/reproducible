<?xml version="1.0"?>
<doc>
    <assembly>
        <name>APSIM.Workflow</name>
    </assembly>
    <members>
        <member name="T:APSIM.Workflow.FileSplitter">
            <summary> Main FileSplitter class</summary>
        </member>
        <member name="M:APSIM.Workflow.FileSplitter.Run(System.String,System.String,System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Main program entry point.
            </summary>
        </member>
        <member name="M:APSIM.Workflow.FileSplitter.PrepareWeatherFiles(Models.Core.Model,System.String,System.String)">
            <summary>
            Copy the weather files to the new directory. This is used for the workflow validation process.
            </summary>
            <param name="model">An apsim model to be searched for Weather models</param>
            <param name="newDirectory">Directory where the apsim met file will be copied</param>
            <param name="directory">The directory where the current file is located</param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:APSIM.Workflow.FileSplitter.CopyObservedData(Models.Core.Model,Models.Core.Model,System.String,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Copy the observed data from the original file to the new file.
            </summary>
            <param name="sims">An apsim model</param>
            <param name="folder">An apsim Folder model</param>
            <param name="oldDirectory">The old directory to copy from</param>
            <param name="newDirectory">New directory to copy to</param>
            <param name="logger">Logger for logging output.</param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:APSIM.Workflow.InputUtilities">
            <summary>
            Utility class for handling input files and paths in the APSIM workflow.
            </summary>
        </member>
        <member name="M:APSIM.Workflow.InputUtilities.GetApsimXFileTextFromFile(System.String)">
            <summary>
            Gets the path of the apsimx file from the directory.
            </summary>
            <param name="apsimFilePath"></param>
            <returns>a string</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:APSIM.Workflow.InputUtilities.CheckIfSourceIsDestination(System.String,System.String)">
            <summary>
            Checks if the source and destination paths are the same.
            </summary>
            <param name="source"></param>
            <param name="destination"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:APSIM.Workflow.InputUtilities.StandardiseFilePaths(System.Collections.Generic.List{System.String})">
            <summary>
            Standardises the file paths to use forward slashes.
            </summary>
            <param name="apsimFilePaths"></param>
            <returns></returns>
        </member>
        <member name="M:APSIM.Workflow.InputUtilities.UpdateWeatherFileNamePathInApsimXFile(System.String,System.String,System.String,APSIM.Workflow.Options,System.String)">
            <summary>
            Updates the weather file name path in the APSIMX file.
            </summary>
            <param name="apsimxFileText">The APSIMX file text.</param>
            <param name="oldPath">The old path of the weather file.</param>
            <param name="newPath">The new path of the weather file.</param>
            <param name="options"></param>
            <param name="apsimFilePath"></param>
        </member>
        <member name="T:APSIM.Workflow.MinimalConsoleFormatter">
            <summary>
            Provides a minimal console formatter for logging output.
            </summary>
        </member>
        <member name="F:APSIM.Workflow.MinimalConsoleFormatter.FormatterName">
            <summary>
            Name of the formatter used in the console logger.
            </summary>
        </member>
        <member name="M:APSIM.Workflow.MinimalConsoleFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:APSIM.Workflow.MinimalConsoleFormatter"/> class.
            </summary>
        </member>
        <member name="M:APSIM.Workflow.MinimalConsoleFormatter.Write``1(Microsoft.Extensions.Logging.Abstractions.LogEntry{``0}@,Microsoft.Extensions.Logging.IExternalScopeProvider,System.IO.TextWriter)">
            <inheritdoc/>
        </member>
        <member name="T:APSIM.Workflow.Options">
            <summary>
            Specifies the command line options for the APSIM.Workflow application.
            </summary>
        </member>
        <member name="P:APSIM.Workflow.Options.Verbose">
            <summary>
            Gets or sets a value indicating whether verbose output is enabled.
            </summary>
        </member>
        <member name="P:APSIM.Workflow.Options.DirectoryPath">
            <summary>
            Gets or sets the input file to be processed.
            </summary>
        </member>
        <member name="P:APSIM.Workflow.Options.ValidationLocations">
            <summary>
            Gets or sets a value indicating whether the program should print the absolute paths of valid validation directories.
            </summary>
        </member>
        <member name="P:APSIM.Workflow.Options.GitHubAuthorID">
            <summary> Github author ID for the pull request. </summary>
        </member>
        <member name="P:APSIM.Workflow.Options.DockerImageTag">
            <summary> Docker image tag for a pull request used to validate data.</summary>
        </member>
        <member name="P:APSIM.Workflow.Options.SplitFiles">
            <summary>File to split</summary>
        </member>
        <member name="P:APSIM.Workflow.Options.ValidationPath">
            <summary>
            Gets or sets the path to the APSIMX file in a docker container.
            </summary>
        </member>
        <member name="P:APSIM.Workflow.Options.CommitSHA">
            <summary>
            Gets or sets the commit SHA to use for the workflow.
            This is typically the SHA of the commit that triggered the workflow run.
            </summary>
        </member>
        <member name="P:APSIM.Workflow.Options.PullRequestNumber">
            <summary>
            Gets or sets the pull request number for the workflow.
            This is typically the number of the pull request that triggered the workflow run.
            </summary>
        </member>
        <member name="T:APSIM.Workflow.PayloadUtilities">
            <summary>
            Utility class for handling payloads in the APSIM workflow.
            A payload is a zip file containing the necessary files for a WorkFlo job.
            </summary>
        </member>
        <member name="F:APSIM.Workflow.PayloadUtilities.WORKFLO_API_TOKEN_URL">
            <summary>
            Production token URL
            </summary>
        </member>
        <member name="F:APSIM.Workflow.PayloadUtilities.WORKFLO_API_SUBMIT_AZURE_URL">
            <summary>
            Production submit azure URL
            </summary>
        </member>
        <member name="F:APSIM.Workflow.PayloadUtilities.R_SIMS_FILEPATHS">
            <summary> List of R simulation files paths</summary>
        </member>
        <member name="F:APSIM.Workflow.PayloadUtilities.EXCLUDED_SIMS_FILEPATHS">
            <summary> List of excluded simulation file paths. Excluded due to Azure runtimes exceeding 16 mins.</summary>
        </member>
        <member name="M:APSIM.Workflow.PayloadUtilities.CopyWeatherFiles(APSIM.Workflow.Options,System.Collections.Generic.List{System.String})">
            <summary>
            Copies the weather files from the specified directories in the apsimx file to the directory.
            </summary>
            <param name="options"></param>
            <param name="apsimFilePaths"></param>
        </member>
        <member name="M:APSIM.Workflow.PayloadUtilities.CopyWeatherFileIfElsewhere(APSIM.Workflow.Options,System.String,System.String,System.String)">
            <summary>
            Copies the weather file if it is not in the same directory as the current one.
            </summary>
            <param name="options">command line arguments</param>
            <param name="oldPath">The path in the apsimx file</param>
            <param name="source">The absolute path of the weather file</param>
            <param name="destination">Where the weather file will be copied into</param>
        </member>
        <member name="M:APSIM.Workflow.PayloadUtilities.GetActualFilePath(System.String[])">
            <summary>
            Gets the actual file path from the matching files.
            /// </summary>
            /// <param name="matchingFiles"></param>
        </member>
        <member name="M:APSIM.Workflow.PayloadUtilities.GetAllFilesMatchingPath(System.String)">
            <summary>Gets all files matching the specified path in the container working directory. </summary>
            <param name="source"></param>
        </member>
        <member name="M:APSIM.Workflow.PayloadUtilities.UpdateWeatherFileNamePathInApsimXFile(System.String,System.String,System.String,APSIM.Workflow.Options,System.String)">
            <summary>
            Updates the weather file name path in the APSIMX file.
            </summary>
            <param name="apsimxFileText">The APSIMX file text.</param>
            <param name="oldPath">The old path of the weather file.</param>
            <param name="newPath">The new path of the weather file.</param>
            <param name="options"></param>
            <param name="apsimFilePath"></param>
        </member>
        <member name="M:APSIM.Workflow.PayloadUtilities.CreateZipFile(System.String,System.Boolean)">
            <summary>
            Creates a zip file from the specified directory.
            </summary>
            <param name="directoryPath">directory where payload files can be found.</param>
            <param name="isVerbose">whether to print verbose output.</param>
        </member>
        <member name="M:APSIM.Workflow.PayloadUtilities.CheckZipFileList(System.String,System.Boolean)">
            <summary>
            Checks the contents of the zip file and prints them to the console.
            This is useful for debugging purposes to ensure that the zip file contains the expected files.
            </summary>
            <param name="zipFilePath"></param>
            <param name="isVerbose"></param>
        </member>
        <member name="M:APSIM.Workflow.PayloadUtilities.AddGridCSVToZip(System.String,System.String,System.Boolean)">
            <summary>
            Adds the grid.csv file to the zip archive.
            </summary>
            <param name="zipFilePath"></param>
            <param name="directoryPath"></param>
            <param name="isVerbose"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:APSIM.Workflow.PayloadUtilities.CreateGridCSVFile(System.String,System.Boolean)">
            <summary>
            Creates a grid.csv file in the specified directory.
            This file is used to define the grid for the validation workflow.
            </summary>
            <param name="directoryPath"></param>
            <param name="isVerbose"></param>
        </member>
        <member name="M:APSIM.Workflow.PayloadUtilities.RemoveUnusedFilesFromArchive(System.String)">
            <summary>
            Removes unused files from the payload archive.
            </summary>
            <param name="zipFilePath"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:APSIM.Workflow.PayloadUtilities.SubmitWorkFloJob(System.String)">
            <summary>
            Submits the WorkFlo job to the Azure API.
            /// </summary>
            /// <param name="directoryPath">The directory path where the payload file is located.</param>
        </member>
        <member name="M:APSIM.Workflow.PayloadUtilities.CopyEnvToPayload(System.String,System.String,System.Boolean)">
            <summary>
            Copies the .env file to the payload zip file.
            </summary>
            <param name="envFileParentDirPath">The parent directory path of the .env file.</param>
            <param name="payloadDirectoryPath">The directory path where the payload zip file is located.</param>
            <param name="isVerbose">Outputs extra information during the copy process if true</param>
        </member>
        <member name="T:APSIM.Workflow.Program">
            <summary>
            Main program class for the APSIM.Workflow application.
            </summary>
        </member>
        <member name="F:APSIM.Workflow.Program.exitCode">
            <summary>Exit code for the application.</summary>
        </member>
        <member name="F:APSIM.Workflow.Program.apsimFilePaths">
            <summary>List of APSIM file paths to be processed.</summary>
        </member>
        <member name="M:APSIM.Workflow.Program.Main(System.String[])">
            <summary> Main entry point for APSIM.WorkFlow</summary>
            <param name="args">command line arguments</param>
        </member>
        <member name="M:APSIM.Workflow.Program.RunOptions(APSIM.Workflow.Options)">
            <summary>Runs the application with the specified options.</summary>
            <param name="options"></param>
        </member>
        <member name="M:APSIM.Workflow.Program.PrintSplitDirectoryContents(System.String)">
            <summary>
            Prints the contents of the split directory.
            </summary>
            <param name="splitDirectory">The path to the split directory.</param>
        </member>
        <member name="M:APSIM.Workflow.Program.HandleParseError(System.Collections.Generic.IEnumerable{CommandLine.Error})">
            <summary>
            Handles parser errors to ensure that a non-zero exit code
            is returned when parse errors are encountered.
            </summary>
            <param name="errors">Parse errors</param>
        </member>
        <member name="T:APSIM.Workflow.SplittingGroup">
            <summary>
            SplittingGroup is a class that represents a group of experiments and simulations to be split into separate files.
            </summary>
        </member>
        <member name="P:APSIM.Workflow.SplittingGroup.Name">
            <summary>Name of the group.</summary>
        </member>
        <member name="P:APSIM.Workflow.SplittingGroup.Experiments">
            <summary>List of experiments to be included in this group.</summary>
        </member>
        <member name="P:APSIM.Workflow.SplittingGroup.Simulations">
            <summary>List of simulations to be included in this group.</summary>
        </member>
        <member name="T:APSIM.Workflow.SplittingRules">
            <summary>
            SplittingRules is a class that represents the rules for splitting an APSIM file into multiple files.
            </summary>
        </member>
        <member name="P:APSIM.Workflow.SplittingRules.OutputPath">
            <summary> Output file path </summary>
        </member>
        <member name="P:APSIM.Workflow.SplittingRules.Groups">
            <summary> List of groups to split the file into </summary>
        </member>
        <member name="T:APSIM.Workflow.ValidationLocationUtility">
            <summary>
            A utility class for working with validation locations.
            </summary>
        </member>
        <member name="F:APSIM.Workflow.ValidationLocationUtility.VALIDATION_LOCATIONS">
            <summary>The locations where validation directories are expected to be found.</summary>
        </member>
        <member name="M:APSIM.Workflow.ValidationLocationUtility.GetDirectoryPaths">
            <summary>
            Get the names of all directories in the validation locations that contain an .apsimx file.
            </summary>
            <returns>A string array</returns>
        </member>
        <member name="T:APSIM.Workflow.WorkFloFileUtilities">
            <summary>
            Utility class for creating and managing WorkFlo files.
            A workflow file is a YAML file that defines a series of tasks to be executed in a specific order.
            </summary>
        </member>
        <member name="M:APSIM.Workflow.WorkFloFileUtilities.CreateValidationWorkFloFile(APSIM.Workflow.Options)">
            <summary>
            Creates a validation workflow file in the specified directory.
            </summary>
            <param name="options">Command line argument values</param>
            <exception cref="T:System.IO.DirectoryNotFoundException"></exception>
        </member>
        <member name="M:APSIM.Workflow.WorkFloFileUtilities.GetDirectoryName(System.String)">
            <summary>
            Gets the directory name from the specified directory path.
            </summary>
            <param name="directoryPathString"></param>
        </member>
        <member name="M:APSIM.Workflow.WorkFloFileUtilities.GetCurrentBuildNumberAsync">
            <summary>
            Gets the current build number.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
